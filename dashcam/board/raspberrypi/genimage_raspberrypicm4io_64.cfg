image boot.vfat {
  vfat {
    files = {
      "bcm2711-rpi-cm4.dtb",
      "rpi-firmware/cmdline.txt",
      "rpi-firmware/config.txt",
      "rpi-firmware/fixup4.dat",
      "rpi-firmware/start4.elf",
      "rpi-firmware/overlays",
      "Image",
      "u-boot.bin",
      "boot.scr.uimg"
    }
  }

  size = 32M
}

egsiogsoehg
image data.ext4 {
  egsseseg
  name = "data"
  ext4 {
    use-mke2fs = true
    label = "data"
  }

  size = 32M
}

image sdcard.img {
  hdimage {
  }

  # The offset needs to match the buildroot config (for the U-Boot loader)
  # and the fw_env.config used by the target userspace in the fw_printenv
  # command.  Same goes with the implied size here (16K as seen by the
  # placement or the redundant storage).
  partition env {
    image = "uboot-env.bin"
    offset = 16K
    in-partition-table = false
  }
  
    partition env_redundant {
    image = "uboot-env.bin"
    offset = 32K
    in-partition-table = false
  }
  
  partition boot0 {
    partition-type = 0xC
    bootable = "true"
    image = "boot.vfat"
    offset = 64K
  }

  partition boot1 {
    partition-type = 0xC
    image = "boot.vfat"
    in-partition-table = false
    # Groan.  Boot0 was 64K from from the start and the boot partition is
    # 32 MB.  But... this is disk sizing which means binary.  So we are at
    # 32*1024*1024 + 64*1024 bytes from the start.  Divide by 1024 to get
    # back to kB.
    offset = 32832K
  }

  partition rootfs0 {
    partition-type = 0x83
    image = "rootfs.ext4"
    #size = 500M
  }
  
  partition rootfs1 {
    partition-type = 0x83
    image = "rootfs.ext4"
    #size = 500M
  }

  partition data {
    partition-type = 0x83
    image = "data.ext4"
  }
}
